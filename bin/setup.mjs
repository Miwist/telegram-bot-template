#!/usr/bin/env node
import fs from 'fs/promises';
import path from 'path';
import { execSync } from 'child_process';
import { fileURLToPath } from 'url';
import chalk from 'chalk';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

async function main() {
  console.log(chalk.blue('üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram –±–æ—Ç–∞ –Ω–∞ grammY...'));
  console.log(chalk.gray('‚Ñπ –≠—Ç–æ—Ç —à–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞—Å—Ç –±–æ—Ç–∞ –Ω–∞ TypeScript —Å –≥–æ—Ç–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞\n'));

  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
  const projectName = process.argv[2];
  if (!projectName) {
    console.error(chalk.red('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞'));
    console.log(chalk.green('\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã:'));
    console.log(`  npx grammy-bot-template ${chalk.yellow('<–∏–º—è-–ø—Ä–æ–µ–∫—Ç–∞>')}`);
    console.log(chalk.gray('\n–ü—Ä–∏–º–µ—Ä:'));
    console.log(`  npx grammy-bot-template ${chalk.yellow('–º–æ–π-—Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç')}`);
    process.exit(1);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
  if (!/^[a-z0-9-]+$/.test(projectName)) {
    console.error(chalk.red('‚ùå –û—à–∏–±–∫–∞: –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ:'));
    console.error(chalk.red('   - –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã (a-z)'));
    console.error(chalk.red('   - —Ü–∏—Ñ—Ä—ã (0-9)'));
    console.error(chalk.red('   - –¥–µ—Ñ–∏—Å—ã (-)'));
    process.exit(1);
  }

  const projectPath = path.join(process.cwd(), projectName);
  
  try {
    await fs.mkdir(projectPath);
  } catch (err) {
    if ((err as NodeJS.ErrnoException).code === 'EEXIST') {
      console.error(chalk.red(`‚ùå –û—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ "${projectName}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`));
      console.log(chalk.gray('\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞:'));
      console.log(`  npx grammy-bot-template ${chalk.yellow('<–¥—Ä—É–≥–æ–µ-–∏–º—è>')}`);
      process.exit(1);
    }
    throw err;
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —à–∞–±–ª–æ–Ω–∞
  console.log(chalk.blue('\nüìÇ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–∞...'));
  await fs.cp(
    path.join(__dirname, '../template'),
    projectPath,
    { recursive: true }
  );

  // –û–±–Ω–æ–≤–ª—è–µ–º package.json
  const userPackageJsonPath = path.join(projectPath, 'package.json');
  const userPackageJson = JSON.parse(await fs.readFile(userPackageJsonPath, 'utf-8'));
  userPackageJson.name = projectName.toLowerCase().replace(/\s+/g, '-');
  await fs.writeFile(
    userPackageJsonPath,
    JSON.stringify(userPackageJson, null, 2)
  );

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  console.log(chalk.blue('\nüì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏... (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –ø–∞—Ä—É –º–∏–Ω—É—Ç)'));
  try {
    execSync('npm install', { cwd: projectPath, stdio: 'inherit' });
  } catch (error) {
    console.error(chalk.red('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:'));
    console.error(error);
    process.exit(1);
  }

  // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  console.log(chalk.greenBright(`\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ë–æ—Ç "${projectName}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`));
  console.log(chalk.green(`   –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: ${chalk.underline(projectPath)}`));

  console.log(chalk.yellowBright('\n–î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:'));
  console.log(chalk.cyan(`\n1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:`));
  console.log(`   cd ${chalk.yellow(projectName)}`);
  
  console.log(chalk.cyan(`\n2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª–µ:`));
  console.log(`   ${chalk.yellow('.env')}`);
  
  console.log(chalk.cyan(`\n3. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:`));
  console.log(`   ${chalk.yellow('npm start')}      - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏`);
  console.log(`   ${chalk.yellow('npm run build')}  - —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞`);
  console.log(`   ${chalk.yellow('npm run dev')}    - –∑–∞–ø—É—Å–∫ —Å hot-reload (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω nodemon)`);

  console.log(chalk.gray('\n‚Ñπ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è grammY: https://grammy.dev/ru'));
}

main().catch(err => {
  console.error(chalk.red('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:'));
  console.error(err);
  process.exit(1);
});
